# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  if File.file?("./vagrant_config.yml")
    vconfig = YAML::load_file("./vagrant_config.yml")
  else
    puts 'Missing vagrant_config.yml file.  Assuming defaults.'
    vconfig = Hash.new
  end

  box             = vconfig['box']             || "Ubuntu-14.04-base.box"
  hostname        = vconfig['hostname']        || "Ubuntu-14.04"
  saltstack_local = vconfig['saltstack_local'] || false
  gui             = vconfig['gui']             || true
  minion_config   = vconfig['minion_config']   || "config/minion"
  workspace       = vconfig['workspace']   || "../.."

  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = box

  config.vm.hostname = hostname
  config.vm.boot_timeout = 1200

  config.vm.provider :virtualbox do |vb|
    vb.gui = gui

    # Configure VM Ram usage
    vb.customize [
      "modifyvm", :id,
      "--name", hostname,
      "--memory", "3584"
    ]

  end

  ## Default to eth1
  config.vm.network "public_network", bridge: "eth1"

  ## For masterless, mount your salt file root
  config.vm.synced_folder "../salt", "/srv/salt/"

  ## Log files
  config.vm.synced_folder "../logs", "/srv/logs/"

  ## Workspace Synced Folder
  config.vm.synced_folder workspace, "/srv/workspace"

  ## Forwarding port
  config.vm.network "forwarded_port", guest: 8080, host: 8080, auto_correct: true

  if saltstack_local
    puts 'Calling submodule salt (Requires vagrant destroy to undo!)'
    config.vm.synced_folder "../saltstack", "/srv/saltstack/"
    config.vm.synced_folder "../workbox/config", "/etc/salt"
    config.vm.synced_folder "../saltstack/salt", "/usr/lib/python2.7/dist-packages/salt"
    config.vm.provision "shell", path: "config/cleanDevEnvironment.bs"
    config.vm.provision "shell", inline: '/srv/saltstack/scripts/salt-call state.highstate --local'
  else
    ## Use all the defaults:
    config.vm.provision :salt do |salt|

      ## Prepare minion config
      minionSource = File.read(minion_config)
      File.write("config/minion_updated", minionSource.gsub(/@id@/, hostname))

      salt.minion_config     = "config/minion_updated"
      salt.run_highstate     = true
      salt.colorize          = true
    end
  end
end
